//---------------------------------------------------------------------------------
// File Name: zpta004.cpp
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#include "CollisionObject.h"
#ifndef TA_ERROR_H
#include "../Common/Error.h"
#endif //
#ifndef llOllOOOlll
#include "../Common/zcta004.h"
#endif //
#ifndef llOllOOlOOO
#include "../Physics/zpta013.h"
#endif //
names\
pac\
e
TA\

{
bo\
o\
l\

Coll\
i\
sio\
nObject
::
In\
iti\
a\
lise\
F\
romFile
(
co\
ns\
t
Char
*
ll\
l\
OOO\
lOll
)
{
if
(
!
Ser\
ia\
lisa\
ble
(
)
)
{
lO\
OOOO\
OllO
(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be initialised from file.")
;
retur\
n
false
;
}
lOOOOOO\
l\
OOO\

llOllO\
O\
l\
OOl
;
if
(
ll\
OllO\
Ol\
OOl
.
In\
i\
tiali\
se\

(
lllOOOlO\
ll
)
)
{
Se\
ria\
li\
ser
lOOOlOl\
lOl
;
lOOOl\
Ol\
lOl
.
Initia\
lise
(
llOllO\
Ol\
OO\
l\

)
;
TA_ASSERT\

(
llOl\
lOOlOlO
(
)
)
;
lll\
Ol\
OOOlO
ll\
OllOOl\
Oll
(
llO\
ll\
OOlOlO
(
)
,
ll\
OllOOl\
lOO\

)
;
Ver\
sio\
n
ll\
lOlOOlOO\

=
llOllOOlOll
.
Se\
rialise
(
lOOO\
l\
Ol\
lO\
l
)
;
if
(
lll\
OlOOl\
O\
O
>
ll\
OllOOllOO
)
{
lOO\
O\
OOOll\
O
(
0
,
"CollisionObject::InitialiseFromFile. Version number is too new.")
;
return
fa\
lse
;
}
Se\
rialise
(
lOOOlOll\
O\
l
,
lllOl\
OOlO\
O\

)
;
}
else
{
TA_ERROR_RE\
POR\
T_SEVERE
(
"CollisionObject::InitialiseFromFile failed.")
;
re\
t\
ur\
n
false\

;
}
ret\
ur\
n
true\

;
}
bool
Collisi\
o\
nO\
bje\
ct\

::
Sav\
eToFile\

(
const
Ch\
a\
r\

*
ll\
lOO\
O\
lOll\

)
{
if
(
!
Serialisable
(
)
)
{
lOO\
O\
OOOl\
lO
(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be saved.")
;
ret\
u\
rn
fa\
lse\

;
}
lOOOO\
OOO\
O\
Ol
llOllO\
O\
l\
lOl\

;
if
(
ll\
OllOO\
l\
lOl\

.
Initi\
ali\
se\

(
lllOOOl\
Ol\
l
)
)
{
Ser\
ialis\
er\

lOOOlOllOl
;
lOOOlOllOl\

.
Initialise
(
llOl\
lOOl\
lOl
)
;
TA_AS\
SERT
(
llO\
llO\
OlO\
lO
(
)
)
;
lllO\
lOOO\
lO
llOllO\
OlO\
l\
l
(
llOllOOlOlO
(
)
,
llOllOO\
llOO
)
;
Ver\
sion\

ll\
lOlOO\
lOO
=
ll\
Ol\
lOOlOl\
l\

.
Se\
rial\
ise\

(
lOO\
OlOl\
lOl\

)
;
Serialise
(
lOOOlOllO\
l
,
lllOl\
O\
O\
l\
OO
)
;
}
else
{
TA_ERROR_REPORT_SEVERE
(
"CollisionObjectCombo::Save failed")
;
retu\
rn
false
;
}
return
true\

;
}
boo\
l
Coll\
is\
i\
onOb\
jec\
t\

::
InitialiseFromFil\
e\
I\
nMemor\
y
(
void\

*
llO\
ll\
OOl\
llO\

,
int
llOllOOllll
)
{
if
(
!
Seri\
alisa\
ble
(
)
)
{
lO\
OOOOOl\
lO
(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be saved.")
;
return
false\

;
}
if
(
!
llOll\
OOlllO
)
{
lOO\
O\
l\
llOl\
O\

(
0
,
"CollisionObject::InitialiseFromFile. pFileData = 0.")
;
return
fal\
se
;
}
if\

(
!
llOl\
lO\
Ol\
l\
l\
O
)
{
lOOOlllOl\
O
(
0
,
"CollisionObject::InitialiseFromFile. nSizeInBytes = 0.")
;
return\

fals\
e\

;
}
lOOOO\
OO\
l\
OOl
llO\
llOOlOOl\

;
llOllOOl\
OOl\

.
Init\
ialise\

(
llO\
llOOlll\
O
,
llOl\
l\
O\
Ol\
ll\
l
)
;
Serialiser
lO\
O\
Ol\
O\
ll\
O\
l
;
lO\
O\
O\
l\
OllOl\

.
In\
iti\
ali\
se\

(
llOllOOlOOl
)
;
TA_ASSERT
(
llO\
llOOlOl\
O\

(
)
)
;
lllO\
l\
OOO\
lO
llO\
ll\
OO\
l\
Oll
(
ll\
OllOOlOlO
(
)
,
llO\
l\
lO\
OllOO\

)
;
Version
lllOlOOlOO
=
llOll\
O\
OlOll
.
Serialis\
e
(
lOOOlOllOl\

)
;
if\

(
lllOlO\
Ol\
OO
>
llOl\
lOOl\
lOO\

)
{
lOOOO\
OO\
llO\

(
0
,
"CollisionObject::InitialiseFromFile. Version number is too new.")
;
retur\
n
fal\
se
;
}
Serialis\
e
(
lOO\
OlOll\
Ol
,
lllOlOO\
lOO
)
;
if
(
llOll\
O\
OlOOl\

.
lO\
O\
O\
OOOll\
l\
O
(
)
)
{
lOOOO\
OOllO
(
0
,
"CollisionObject::InitialiseFromFile. Memory overflowed.")
;
retu\
r\
n
fal\
se
;
}
retu\
r\
n\

tr\
u\
e
;
}
bool
Co\
llisio\
nO\
b\
ject\

::
Sav\
eT\
oFi\
leInM\
em\
ory\

(
void
*
llO\
llOO\
lll\
O\

,
int
llOllOOll\
ll
)
{
if
(
!
Ser\
i\
alisable
(
)
)
{
lOO\
OOOO\
l\
lO
(
0
,
"CollisionObject::InitialiseFromFile. This object type cannot be saved.")
;
ret\
urn\

false
;
}
if
(
!
llOllOOll\
lO
)
{
lOOOl\
llOl\
O
(
0
,
"CollisionObject::InitialiseFromFile. pFileData = 0.")
;
return
false
;
}
if
(
!
llOllOOlll\
O
)
{
lO\
OOl\
ll\
OlO\

(
0
,
"CollisionObject::InitialiseFromFile. nSizeInBytes = 0.")
;
re\
t\
urn\

fa\
lse
;
}
lO\
O\
OOO\
OO\
lOl
llOl\
lO\
OllOl
;
ll\
OllOOllO\
l
.
In\
i\
tiali\
se
(
ll\
OllOOl\
l\
l\
O
,
ll\
OllOO\
l\
lll\

)
;
Seriali\
ser
lO\
OOl\
OllOl\

;
lO\
OO\
l\
OllOl
.
Ini\
t\
i\
al\
i\
se\

(
llOl\
l\
OOl\
lOl\

)
;
TA_A\
S\
SE\
R\
T\

(
llOl\
l\
OOl\
OlO
(
)
)
;
lllOlOOOlO
ll\
OllOOlOll
(
llO\
llOO\
lOlO\

(
)
,
llO\
l\
lO\
OllOO
)
;
Vers\
ion\

lllOl\
O\
O\
lOO
=
llOllO\
O\
l\
Ol\
l
.
Serialis\
e
(
lO\
OOlOllO\
l
)
;
Seri\
alise\

(
lO\
OOlO\
llO\
l
,
lllOlOOlO\
O
)
;
if\

(
llOllO\
Ol\
l\
Ol\

.
lOOOOOOl\
l\
l\
O
(
)
)
{
lO\
O\
OO\
OOll\
O
(
0
,
"CollisionObject::InitialiseFromFile. Memory overflowed.")
;
retur\
n
fals\
e
;
}
retur\
n
tr\
ue\

;
}
int
Coll\
isionOb\
j\
ect\

::
Cal\
cul\
ate\
Fi\
leSize
(
)
{
if
(
!
Seria\
lisabl\
e
(
)
)
return
0
;
lOOO\
OOOl\
OlO\

ll\
Ol\
lO\
OllOl\

;
llOllO\
Ol\
lOl
.
Ini\
ti\
ali\
s\
e
(
)
;
Se\
riali\
se\
r
lO\
OOl\
OllOl
;
lOO\
O\
lOl\
lO\
l
.
Initialise
(
llOl\
lOO\
llOl
)
;
TA_ASS\
E\
RT
(
llOl\
lO\
OlOl\
O
(
)
)
;
ll\
lO\
lOO\
OlO\

ll\
OllOOl\
O\
ll
(
llOllOO\
lOlO
(
)
,
llOllOOllOO
)
;
Ver\
si\
on
lllOlOOl\
OO\

=
llOllO\
OlOll
.
Ser\
ialise
(
lO\
OO\
l\
Oll\
O\
l\

)
;
Se\
rialise\

(
lOOO\
l\
Oll\
Ol
,
ll\
lOl\
OOlO\
O
)
;
retu\
rn
llO\
llOOl\
l\
Ol\

.
lOOOlll\
O\
O\
l
(
)
;
}
}
