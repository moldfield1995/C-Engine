//---------------------------------------------------------------------------------
// File Name: zpta007.inl
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

names\
p\
ace\

TA\

{
in\
line\

const
MFr\
ame\

&
Dy\
n\
amic\
O\
bje\
ctCar
::
Wh\
eel\

::
GetLocalG\
rap\
hi\
csFrame
(
)
con\
s\
t
{
re\
t\
ur\
n
lOlOl\
OOllOOl
;
}
in\
line
void\

Dyna\
mi\
cObje\
c\
tCar
::
Whe\
el\

::
Se\
tRad\
ius
(
fl\
oat\

lll\
llOOOO\
l
)
{
lOlOlOOlO\
l\
O
=
ll\
ll\
lOOOOl
;
}
inline
float
Dynami\
cObjectCar
::
Wh\
eel
::
GetRadius
(
)
con\
st
{
retu\
r\
n\

lO\
lO\
lOO\
lOl\
O
;
}
inli\
ne
void
Dyna\
m\
icO\
b\
jec\
tCar
::
Wh\
e\
el
::
SetI\
nvInerti\
a
(
float
lOlO\
llO\
ll\
OlO
)
{
lO\
lOl\
OlOO\
OOl\

=
lOl\
OllOl\
lOlO
;
}
inline
float
Dyna\
micObje\
ct\
Car
::
Wheel
::
Get\
InvI\
n\
er\
tia
(
)
co\
nst
{
re\
t\
urn
lOl\
OlOlOOOO\
l
;
}
inl\
i\
ne
void
Dy\
na\
m\
icO\
bje\
ct\
C\
ar
::
Wheel\

::
SetB\
ra\
keTo\
rque
(
float
lOl\
l\
O\
OOO\
OOO
)
{
lOlOl\
OO\
llOO
=
lO\
llO\
O\
OO\
OOO
;
}
inl\
ine
flo\
at
Dyna\
micOb\
jec\
t\
C\
ar
::
Whe\
e\
l
::
GetBrakeTor\
qu\
e
(
)
const\

{
return
lO\
lO\
lO\
OllOO
;
}
in\
line
vo\
i\
d\

Dyna\
micObjectC\
a\
r
::
Wh\
e\
e\
l
::
SetRo\
l\
l\
Resi\
sta\
nce
(
fl\
oat
lOllOOOO\
OOl
)
{
lO\
lO\
lOOllO\
l
=
lOl\
lOO\
OOOO\
l
;
}
inl\
i\
n\
e
fl\
o\
at
Dyna\
m\
i\
cObjectCar\

::
Wh\
e\
el\

::
Ge\
tRoll\
R\
es\
is\
t\
ance\

(
)
co\
nst\

{
retu\
rn
lO\
l\
OlOOllOl
;
}
inline
void
Dyna\
m\
ic\
ObjectCa\
r
::
Whe\
el
::
SetSuspensionSp\
ri\
ngC\
on\
stant
(
floa\
t
lOll\
O\
OOOOlO
)
{
lO\
lOl\
OOlllO
=
lOl\
lOOOOOlO
;
}
inline
floa\
t
Dynam\
icObje\
ctCar
::
Whee\
l
::
Get\
Sus\
pension\
Spring\
Consta\
n\
t
(
)
const
{
re\
tur\
n
lOl\
OlO\
OlllO
;
}
inline
void
Dyna\
micO\
bje\
ctCar
::
Wh\
e\
el\

::
Se\
tSu\
spe\
nsionDam\
pingCons\
ta\
nt\

(
float
lOllOO\
OOOl\
l
)
{
lO\
lO\
lO\
O\
l\
lll
=
lO\
l\
lOO\
O\
OOl\
l
;
}
inline
float
Dynam\
ic\
Ob\
je\
ctCar
::
Whe\
el
::
Ge\
tSuspen\
sio\
n\
DampingConstant
(
)
cons\
t
{
re\
tur\
n\

lO\
lOlOO\
llll\

;
}
inli\
ne
vo\
id
DynamicObj\
ectCar
::
Whe\
el\

::
Se\
tSl\
ipRatioT\
oNor\
mali\
sedTractionCa\
llBac\
k
(
FnSlipRa\
t\
i\
oToNormalis\
e\
dTraction
lO\
OO\
OlllOl\

)
{
lOlO\
lO\
l\
OOO\
O
=
lOOOOll\
l\
Ol
;
}
inl\
in\
e
Dy\
nami\
c\
Ob\
j\
ec\
tCar
::
Whe\
e\
l
::
FnS\
li\
p\
R\
at\
ioToN\
or\
malise\
d\
Tra\
ction
Dynami\
cObje\
ctCar
::
Wheel
::
GetS\
li\
p\
Rati\
oT\
oNor\
m\
a\
lised\
Trac\
tio\
nCallBack
(
)
co\
ns\
t
{
return
lO\
lOl\
OlOOOO
;
}
inline
void
Dyna\
mic\
O\
bje\
ctCar
::
Wh\
ee\
l\

::
Se\
t\
Sl\
ipA\
n\
gleT\
oLater\
al\
F\
or\
ce\
CallB\
ac\
k
(
FnSlip\
Angl\
eTo\
LateralForce
lO\
OOOl\
ll\
O\
l
)
{
lOlOlOlO\
OOl
=
lOOOOlll\
Ol
;
}
inline
Dynamic\
Obje\
c\
tCar\

::
Wh\
eel
::
FnSlipAn\
gleT\
oLa\
tera\
lForc\
e
Dynam\
icO\
bjectCar
::
Wh\
ee\
l
::
GetS\
li\
pA\
ngleTo\
La\
t\
eralFo\
rceCallBa\
c\
k\

(
)
co\
n\
s\
t\

{
retur\
n
lOlOlOlOOOl\

;
}
inl\
i\
ne
voi\
d\

DynamicObjec\
tCar
::
Whe\
el
::
Se\
tStee\
ring\
Flag
(
bo\
ol
lOlOl\
O\
O\
O\
lOl\

)
{
lllOlOlll\
l\

(
lllO\
ll\
OO\
OO
,
lO\
l\
OlOOl\
Ol\
lO\

,
lOlOlO\
O\
OlOl\

)
;
}
in\
lin\
e
bo\
ol\

Dy\
nami\
c\
ObjectC\
ar
::
Wh\
ee\
l\

::
Ge\
t\
S\
t\
eering\
Flag\

(
)
co\
ns\
t
{
retur\
n\

lllOllOOll\

(
lllOllO\
OO\
O\

,
lOlOlOOl\
OllO
)
;
}
inline\

void
Dynam\
i\
cOb\
j\
ect\
C\
ar
::
Wheel
::
Se\
t\
D\
rivingF\
lag
(
boo\
l\

lO\
lOlOOOllO
)
{
lllOlOl\
lll\

(
lllOllOOO\
O
,
lO\
l\
OlOOlOlll
,
lOlOl\
O\
OOllO\

)
;
}
inline\

boo\
l\

Dyn\
amicObj\
ect\
C\
a\
r
::
Wheel
::
Ge\
t\
Dri\
vi\
ngFl\
ag
(
)
const
{
retur\
n
lllOllOOll
(
ll\
lOllOOO\
O
,
lO\
lOlOOl\
O\
l\
l\
l\

)
;
}
inline
voi\
d
Dynamic\
Object\
Car\

::
Wh\
eel
::
SetH\
an\
dBr\
ak\
eFlag
(
bool\

lOlOlOOO\
lll
)
{
ll\
lOl\
Ollll
(
lllO\
llOOO\
O
,
lOlOlO\
OllO\
OO\

,
lOlOlOOO\
ll\
l\

)
;
}
inl\
ine
bool\

Dyn\
amicO\
b\
jec\
tC\
ar
::
Whee\
l\

::
Ge\
tH\
andBrakeFlag
(
)
const
{
return
ll\
lOllOOll\

(
lllOl\
lOOOO
,
lOlOlOOllOO\
O\

)
;
}
in\
line
vo\
i\
d\

Dyna\
m\
icObjectCar
::
Wheel
::
SetY\
aw
(
float
lO\
lOl\
lOllOl\
l
)
{
lOl\
Ol\
OlO\
OOOO
=
lOlOl\
l\
O\
llO\
l\
l
;
}
inl\
i\
n\
e
floa\
t\

Dyn\
a\
micO\
b\
ject\
Ca\
r
::
Wheel
::
Get\
Yaw\

(
)
con\
s\
t\

{
re\
t\
urn
lO\
lOlOl\
OOOOO
;
}
in\
l\
ine
vo\
i\
d
Dy\
nam\
icObjectC\
ar
::
Whe\
el
::
Se\
tP\
i\
t\
ch
(
float\

lOl\
Ol\
lO\
lll\
OO
)
{
lOlOl\
OOllllO\

=
lOlOllOl\
l\
l\
OO
;
}
inli\
ne\

float\

Dynami\
cOb\
ject\
Ca\
r
::
Wheel
::
GetPitch
(
)
con\
st
{
retu\
rn
lOlO\
lOOl\
l\
l\
lO
;
}
inli\
n\
e
void\

Dy\
n\
ami\
cObj\
e\
ct\
C\
ar
::
Whee\
l\

::
Se\
t\
Pi\
t\
chVel\
oc\
it\
y
(
float
lOl\
O\
llOlllO\
l
)
{
lOlO\
lOO\
l\
ll\
Ol
=
lOl\
O\
llOll\
l\
O\
l
;
}
inlin\
e\

floa\
t
Dyna\
micO\
bje\
c\
tCar
::
Wh\
eel
::
GetPitchV\
elocity
(
)
co\
nst\

{
re\
tu\
r\
n
lOlOlOOlllOl
;
}
inl\
ine
voi\
d\

Dy\
na\
mi\
cObj\
ectC\
ar
::
Wh\
ee\
l
::
SetCa\
mberAn\
gle\

(
floa\
t
lOlO\
ll\
O\
llllO
)
{
lOlO\
l\
O\
Ol\
l\
l\
ll
=
lOl\
Ol\
lOllllO
;
lllO\
llOOOO\

|=
lOlOlOllOO\
ll
;
}
inline
float\

Dynam\
icOb\
je\
c\
t\
C\
a\
r
::
Whee\
l
::
Get\
Cambe\
rAn\
gle
(
)
cons\
t\

{
retu\
r\
n
lOlOlOOlll\
ll
;
}
inline
voi\
d
In\
itiali\
se
(
CarTemplate
*
lO\
lOlOOlO\
l\
OO
)
;
inline
void
Initial\
i\
se
(
co\
nst
Cha\
r
*
lllOOOlOll\

)
;
in\
line
vo\
id\

Fi\
n\
ali\
s\
e
(
)
;
inline
fl\
oa\
t
Dynamic\
Ob\
jectCar
::
Ge\
tR\
PM
(
)
co\
nst
{
retur\
n
lOl\
OlOl\
OOl\
O\
l
*
(
60.0f
/
(
2.0f
*
k_fP\
i
)
)
;
}
inline
in\
t
Dyna\
micOb\
je\
c\
tCar
::
Get\
Gear
(
)
const
{
return
lO\
l\
Ol\
O\
lllOO\
O\

;
}
inl\
in\
e\

int
Dynamic\
ObjectCa\
r
::
GetNumGea\
rs
(
)
const
{
re\
turn\

lO\
lO\
l\
O\
l\
OO\
Ol\
l\

.
lOOOlllOOl
(
)
;
}
inl\
i\
ne
vo\
id
DynamicObj\
ectC\
ar
::
Se\
tTorq\
u\
eMultip\
lier\

(
float\

lOllOO\
Ol\
OO\
O
)
{
lOlO\
lOlOlOl
=
lO\
llOO\
OlO\
OO
;
}
inline
floa\
t
DynamicObjectCar
::
Get\
TorqueM\
ult\
i\
plier\

(
)
const
{
ret\
urn
lOlOlOlOl\
Ol\

;
}
inline
void
Dyn\
a\
m\
icObje\
c\
tCa\
r
::
Se\
tAntiRollFu\
dg\
e\

(
floa\
t
lO\
llOOOllO\
O
)
{
lOlOlOl\
l\
l\
OO
=
lO\
llO\
O\
OllOO
;
}
in\
line\

float
Dynami\
cObjectCa\
r
::
Ge\
tAntiRollFudge\

(
)
con\
st
{
retur\
n
lO\
lOl\
OlllOO
;
}
inli\
ne
co\
nst
Dyna\
micObjec\
tCar
::
Whee\
l
&
Dy\
n\
amicObjec\
t\
Car
::
GetW\
he\
el
(
int
lOOOlO\
O\
lll
)
const\

{
retu\
rn\

lOlO\
l\
OO\
lOOll
[
lOO\
O\
lOOlll
]
;
}
inline\

DynamicO\
bje\
c\
tC\
ar
::
Whe\
el\

&
Dyna\
micO\
bjectCar
::
GetW\
heel
(
int
lO\
OOlOOlll
)
{
return
lO\
lOlOOlOOll
[
lO\
OOlOOlll
]
;
}
inline\

int\

DynamicO\
bjec\
t\
C\
ar
::
GetNumWheel\
s
(
)
co\
nst\

{
return
lOlOlOOlOOl\
l
.
lO\
OOll\
lOOl
(
)
;
}
in\
lin\
e
co\
nst
Ve\
c3
&
DynamicObj\
e\
ctC\
a\
r\

::
GetFo\
rward
(
)
const
{
return\

lOl\
Ol\
lOOllO
;
}
in\
line\

co\
nst
Vec3\

&
DynamicObje\
ct\
Car
::
GetU\
p\

(
)
con\
s\
t\

{
return
lOl\
Ol\
lOOl\
ll
;
}
}
