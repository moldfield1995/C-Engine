//---------------------------------------------------------------------------------
// File Name: zcta003.h
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#ifndef lOlOOlllOO
#define lOlOOlllOO
#ifndef TA_TYPES_H
#include "Types.h"
#endif //
#ifndef TA_COMMON_H
#include "Common.h"
#endif //
name\
space
TA
{
cla\
s\
s
lOlOO\
l\
l\
lO\
l
{
public
:
lOlO\
OlllOl\

(
)
{
lOlOOllllO
=
0
;
lO\
lOOl\
lll\
l
=
0
;
}
~
lOlOOl\
l\
lOl
(
)
{
Fin\
al\
ise
(
)
;
}
void
In\
i\
ti\
alise
(
voi\
d
*
lO\
l\
OlOOOO\
O
,
int
lO\
OlllO\
l\
l\
O\

)
{
TA_\
ASSERT\

(
lOO\
lllO\
llO
>=
0
)
;
lOlOOllllO
=
(
u8\

*
)
lOlOlOOOO\
O
;
lO\
lOOlllll
=
lOlOOl\
l\
l\
l\
O
+
lOOlllO\
llO\

;
}
vo\
i\
d
Finalise
(
)
{
}
template\

<
cl\
a\
ss
Typ\
e
>
void
lOlOlOOOOl
(
co\
ns\
t\

Ty\
pe
&
lOOlll\
llOO
)
{
TA_\
AS\
S\
ER\
T
(
(
u32
)
lOlOOllllO\

+
sizeof
(
lO\
Ol\
l\
l\
llOO
)
<=
(
u32
)
lOlO\
O\
lllll
)
;
*
(
Ty\
pe
*
)
lO\
lOOllllO
=
lOO\
l\
lll\
l\
O\
O\

;
(
(
Ty\
p\
e\

*
&
)
lOl\
OOl\
l\
ll\
O
)
++
;
}
int
lOlOl\
OOOlO
(
)
{
return
*
(
(
int
*
&
)
lOlO\
Ol\
ll\
lO
)
++
;
}
int
lOl\
OlO\
O\
O\
ll
(
in\
t
lOOOlOOll\
l\

)
{
TA_ASSERT
(
(
u8
*
)
&
(
(
int\

*
)
lO\
lOOll\
llO
)
[
lOO\
Ol\
OO\
lll
]
<
lO\
lOOlllll
)
;
return
(
(
int\

*
)
lOlO\
Oll\
ll\
O
)
[
lOOOl\
OO\
ll\
l\

]
;
}
voi\
d\

lO\
l\
OlO\
OlOO
(
int
lOOllllllO\

)
{
lOlO\
Ol\
lllO\

+=
lOO\
ll\
l\
ll\
lO
;
TA\
_ASS\
ERT
(
lO\
lO\
Oll\
llO
<=
lOl\
O\
O\
lllll
)
;
}
vo\
id
*
lOl\
OlOOlOl\

(
)
{
return
lOl\
O\
Ollll\
O
;
}
bo\
ol
AtEnd
(
)
{
return
(
lOlO\
OllllO\

>=
lO\
lOO\
ll\
lll
)
;
}
private
:
u8\

*
lOlOOlll\
l\
O\

;
u8\

*
lO\
l\
O\
O\
lll\
ll
;
}
;
}
;
#endif //
