//---------------------------------------------------------------------------------
// File Name: zcta001.h
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#ifndef lOOllOllll
#define lOOllOllll
#ifndef TA_COMMON_H
#include "Common.h"
#endif //
namespace
TA\

{
tem\
plate\

<
cl\
a\
ss
Ty\
pe
,
bool
lOOll\
lOOlO\

=
true
>
cl\
ass
TAC\
OM\
MO\
N_CL\
AS\
S
lOOOOlOllO
{
publi\
c
:
class
Iter\
a\
tor
{
pu\
bli\
c
:
Iterator
(
)
{
lO\
O\
lllOOll\

=
0
;
lOO\
l\
ll\
OlOO\

=
0
;
}
~
Iterator\

(
)
{
Fi\
nalise\

(
)
;
}
void
operator\

++
(
)
{
if\

(
lOOll\
lO\
l\
OO
>
0
)
{
lO\
Ol\
llO\
Oll
++
;
lOOlll\
O\
lOO\

--
;
}
}
Typ\
e
&
op\
erator
*
(
)
{
ret\
urn
*
lOOll\
lOOll
;
}
bool
At\
End
(
)
{
return
lOO\
lllOlOO
<=
0
;
}
pr\
i\
vate
:
fr\
iend
cla\
ss
lOOOO\
l\
OllO\

<
Ty\
p\
e
,
lOO\
l\
llOOlO
>
;
void
In\
itiali\
s\
e
(
Type
*
lO\
Oll\
l\
OlO\
l
,
in\
t
lO\
O\
l\
ll\
OllO\

)
{
lOO\
lllOOl\
l
=
lO\
OlllOlOl
;
lOOlllO\
lOO\

=
lOOlllO\
llO\

;
}
vo\
id\

Fin\
ali\
s\
e
(
)
{
lOOlllO\
Oll
=
0
;
lOO\
ll\
lOlO\
O
=
0
;
}
Type\

*
lO\
OlllOO\
ll
;
in\
t
lOOlll\
O\
lO\
O
;
}
;
lOOO\
OlOllO
(
)
;
~
lOO\
O\
Ol\
OllO
(
)
;
void
Initial\
ise
(
int
lOOlllOlll
,
int
lOO\
l\
lllO\
OO
,
in\
t
lOO\
ll\
l\
lOOl
=
-
1
)
;
void
Final\
ise
(
)
;
voi\
d\

Clear
(
)
;
vo\
i\
d\

lOO\
l\
ll\
lO\
lO
(
)
;
Type\

&
operat\
or
[
]
(
int
lOOOlOOll\
l
)
;
const
Type
&
op\
erato\
r
[
]
(
in\
t
lOOO\
l\
O\
O\
lll
)
const
;
int\

lOOO\
lll\
OO\
l
(
)
const\

;
int\

lO\
OllllOll\

(
)
const
;
Type
&
lOO\
O\
l\
ll\
OOO
(
)
;
void\

lOOOll\
lOOO
(
co\
n\
s\
t
Type
&
lOOl\
ll\
llO\
O
)
;
void
lO\
OlllllOl
(
in\
t
lOOllllll\
O\

)
;
vo\
id
lO\
Oll\
llll\
l
(
int
lOOOlOOl\
ll
)
;
Type
&
lOl\
OOOOO\
OO
(
int
lOOO\
l\
OOlll
)
;
voi\
d
lOlOO\
OOOOl\

(
int
lOlOO\
OO\
Ol\
O
)
;
int
lOl\
OOOOOl\
l\

(
)
;
Itera\
tor
lOlOOOO\
lOO\

(
)
;
voi\
d\

lOlOO\
OOl\
Ol
(
)
;
bool
lOlOOOOll\
O
(
co\
nst
Type\

*
lOlO\
O\
OOlll\

)
const\

;
in\
t
lOl\
OOOlOOO
(
const
Type
*
lOl\
OO\
OOlll
)
con\
s\
t
;
pri\
vat\
e
:
in\
t\

lOlOOOlO\
O\
l\

;
int
lOlOO\
OlOlO\

;
int
lO\
lOOOlO\
ll\

;
Type
*
lOlOOOl\
lOO
;
}
;
}
#include "../Common/zcta002.inl"
#endif //
