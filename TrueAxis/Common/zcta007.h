//---------------------------------------------------------------------------------
// File Name: zcta007.h
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#ifndef lOlOOlOlOO
#define lOlOOlOlOO
#ifndef llOlllllOl
#include "../Common/zcta015.h"
#endif //
namespa\
ce
TA
{
class
TAC\
OMMON_CLASS\

lOO\
O\
OOOlOll
{
pub\
lic\

:
virt\
ual\

~
lOOOOO\
OlOll
(
)
{
}
vi\
r\
tual
bool
lOOOllOOOO\

(
)
=
0
;
vi\
rt\
ual
bool
ll\
lOlOOll\
l\

(
)
=
0
;
vi\
rtu\
al\

void
lOlOO\
llOl\
O
(
vo\
id
*
lOOll\
l\
O\
OO\
O
,
in\
t
lOOl\
l\
lOl\
lO
)
=
0
;
private
:
}
;
class
TA\
COMMO\
N_C\
LASS
lO\
OOOO\
O\
llOO
:
public\

lO\
OOOOOlOl\
l
{
pu\
blic\

:
bool
lOOOllOOOO
(
)
{
re\
turn
fa\
lse\

;
}
bool
ll\
l\
OlOOlll\

(
)
{
ret\
urn
true
;
}
virtual
void
lOlO\
O\
llOl\
O
(
vo\
id\

*
lO\
OlllO\
OOO
,
int
lOOlllOllO
)
=
0
;
virtua\
l\

vo\
i\
d
lOOOOOOllO\
l
(
cons\
t\

void
*
lOOl\
l\
lO\
OO\
O\

,
in\
t
lO\
O\
lllOll\
O\

)
{
lOlOOll\
OlO
(
(
void\

*
)
lO\
Olll\
OOOO\

,
lOOl\
l\
lO\
llO\

)
;
}
pr\
ivat\
e\

:
}
;
class
TACOMMON_CL\
ASS\

lO\
O\
O\
OO\
OOO\
O\
l
:
pub\
lic
lOOOOO\
Ol\
lOO
{
publ\
i\
c\

:
lOO\
OOOOOOOl
(
)
;
~
lOOOOO\
OOO\
Ol
(
)
;
bool
Initia\
lis\
e
(
const
Ch\
ar
*
lll\
OOOlO\
ll
)
;
void
Fin\
a\
lise
(
)
;
voi\
d
lOlO\
Ol\
lOl\
O
(
void
*
lOOlllO\
OOO
,
in\
t
lOOll\
lOllO
)
;
private\

:
uSi\
ze\

lOOOO\
OO\
OOlO
;
llOll\
llllO
lO\
OO\
OO\
OOOll
;
}
;
cl\
ass
TAC\
OM\
MO\
N_C\
LAS\
S
lOOOOO\
OOlOl
:
pub\
lic
lOO\
OOOOll\
O\
O
{
pu\
bl\
ic\

:
lOOOOOOOlOl
(
)
;
~
lO\
O\
OO\
O\
OO\
l\
Ol
(
)
;
void\

Ini\
tialise
(
void
*
lOOl\
ll\
O\
OO\
O\

,
int
lOOll\
lOll\
O
)
;
void
Fi\
nalise
(
)
;
void
lOlOOl\
lO\
l\
O
(
vo\
id
*
lOO\
lll\
OOOO
,
in\
t\

lOO\
lllOll\
O
)
;
bool
lOO\
OO\
OOlllO\

(
)
co\
nst
{
return
lOOOOOO\
Olll
>
lOlOOOlOO\
l
;
}
priv\
a\
t\
e
:
u8
*
lOOOOO\
OO\
llO\

;
in\
t
lOO\
OOOOO\
lll
;
int\

lOl\
OOOlO\
Ol
;
}
;
class\

TACOM\
MON_CLA\
SS\

lO\
l\
O\
Ol\
Olll
:
public
lO\
OO\
OOOlOll
{
public
:
bool
lO\
OOllOOOO
(
)
{
retur\
n
true
;
}
bool
lllOlOO\
l\
ll
(
)
{
return
fal\
se
;
}
virtual
int
lO\
lO\
OllOOl
(
)
=
0
;
vi\
rtua\
l
in\
t
lOOO\
lllOOl
(
)
=
0
;
privat\
e
:
}
;
class
TACO\
MMO\
N_CLAS\
S
lOOO\
OOO\
lOOO
:
pu\
blic
lOlOOl\
Olll
{
public
:
lOO\
OOOOlOO\
O
(
)
;
~
lO\
O\
OOOOlOOO\

(
)
;
bool
Initialise
(
const
Char
*
lllOOOlOll
)
;
voi\
d
Finali\
se
(
)
;
void
lOlOOl\
l\
O\
lO
(
vo\
id
*
lOO\
lllOOOO
,
int
lO\
OlllOllO\

)
;
in\
t
lOlOO\
llO\
Ol\

(
)
;
int
lOO\
OlllOOl
(
)
;
priv\
ate\

:
uSi\
z\
e
lOO\
OOO\
O\
OOl\
O
;
llOl\
llll\
l\
O
lOOOO\
O\
OOOll
;
}
;
class
TACOMMO\
N\
_\
CL\
ASS
lOOOOOOl\
OOl
:
publi\
c
lOlOOlOlll\

{
pu\
blic\

:
lOOOOOOlOOl\

(
)
;
~
lO\
OO\
OOOlO\
Ol
(
)
;
void\

Ini\
tia\
lise\

(
void
*
lO\
O\
l\
llOOO\
O
,
int\

lO\
Ol\
llO\
llO
)
;
void\

Fin\
alise\

(
)
;
void
lO\
lO\
Oll\
OlO
(
void
*
lOOl\
ll\
OOOO
,
int
lOOll\
lO\
llO
)
;
int
lOlOOl\
lOO\
l
(
)
{
return
lOOOO\
O\
O\
Olll
;
}
int\

lOO\
OlllOO\
l\

(
)
{
re\
tur\
n
lOlOOO\
lOOl
;
}
bool\

lOOOOOOlllO
(
)
co\
n\
st
{
ret\
urn
lOO\
O\
OOO\
Olll
>
lOlO\
O\
O\
l\
OOl
;
}
pr\
ivat\
e\

:
u8
*
lO\
OO\
OOO\
OllO\

;
int
lOOO\
OOO\
Ol\
ll
;
int
lOlOOO\
lOOl
;
}
;
class\

TACOMMON\
_CLASS
lOO\
OOOO\
lOlO
:
public
lOOO\
O\
OOllOO
{
public\

:
lOOOO\
OO\
lOlO
(
)
;
~
lOOOOOO\
lOlO\

(
)
;
vo\
id\

Initia\
lise
(
)
;
voi\
d
Fin\
al\
ise
(
)
;
void\

lO\
lOO\
ll\
OlO\

(
void
*
lO\
OlllO\
OO\
O
,
in\
t
lOOlll\
O\
l\
lO
)
;
int
lO\
OOlllOO\
l\

(
)
co\
nst
{
re\
turn
lOlOO\
O\
l\
OO\
l
;
}
pri\
vat\
e
:
int
lO\
l\
O\
O\
OlOOl
;
}
;
}
;
#endif //
