//---------------------------------------------------------------------------------
// File Name: zpta022.cpp
//
// Copyright (C) 2004 - 2006 True Axis Pty Ltd, Australia.
// All Rights Reserved.
//
//---------------------------------------------------------------------------------

#define TA_PHYSICS_INTERNAL
#define lOllOllOOlO
#ifndef TA_COMMON_H
#include "../Common/Common.h"
#endif //
#ifdef TA_MSVC
#ifndef TA_PHYSICS_H
#include "DynamicObject.h"
#endif //
#ifndef TA_PHYSICS_H
#include "Physics.h"
#endif //
#include <mm3dnow.h>
#include <xmmintrin.h>
#include <emmintrin.h>
#define lOlOlllllOlO lOlOlOlOOO lOlOlOlOOl
na\
mespace
TA\

{
exte\
r\
n\

floa\
t
lOO\
lOllllll\
O
;
extern
float
lO\
Ol\
lOOOO\
OO\
l
;
exte\
rn
float
lO\
lOlllllOll
;
na\
mes\
pa\
ce\

lO\
lOO\
lOOO\
l\
OO
{
lO\
lOll\
l\
l\
l\
O\
lO
void
lOllOOOlOlO\
O\

(
Vec3
*
lOlOlOOlll
lOOOlOOllOO\

,
const
Vec3
*
lOlOl\
OO\
l\
ll
lOOOlOOll\
Ol
,
con\
st
Ma\
t33
*
lOlOlOO\
ll\
l
lOOOlO\
OlllO
)
{
lll\
OOlOOO\
l
(
(
void
*
)
lO\
OOlOOl\
lOO
!=
(
vo\
id\

*
)
lO\
OO\
lOOllOl\

)
;
lllOO\
lO\
OOl\

(
(
void
*
)
lOOOlO\
O\
llOO
!=
(
voi\
d
*
)
lO\
O\
OlO\
OlllO
)
;
lllOO\
lOO\
Ol\

(
(
void
*
)
lO\
OOlOO\
l\
lOl
!=
(
vo\
i\
d
*
)
lOOOl\
OO\
lllO
)
;
__m1\
28
lO\
OOl\
O\
Olll\
l
;
__m128
lOOO\
l\
Ol\
OOOO
;
__m\
128
lOOOlOlO\
OOl\

;
__m\
1\
28\

lO\
O\
OlOlOOlO
;
const\

__m\
1\
2\
8\

lO\
OOlO\
lOO\
ll\

=
*
(
co\
nst
__m128
*
lO\
lO\
lOOlll
)
lOOOlOOllO\
l
;
const
__m1\
2\
8\

lO\
O\
OlOlOlOO
=
*
(
con\
st
__m128
*
)
&
lOOO\
lOOlllO
->
v3X
;
con\
s\
t
__m\
128
lOO\
OlO\
l\
Ol\
Ol\

=
*
(
cons\
t
__m\
128
*
)
&
lO\
O\
O\
lO\
Oll\
l\
O
->
v3Y
;
const
__m1\
28
lOOOlO\
lOl\
lO
=
*
(
cons\
t\

__m12\
8
*
)
&
lO\
OOl\
O\
OlllO
->
v3\
Z
;
lOO\
OlO\
Oll\
ll
=
(
__m\
1\
28\

&
)
_mm_shuf\
fle_epi\
32\

(
(
const
__\
m128\
i
&
)
lOOOl\
OlO\
Oll
,
_MM_SH\
UFF\
L\
E
(
0
,
0
,
0
,
0
)
)
;
lOOOlOlOOO\
O
=
(
__\
m\
128
&
)
_mm\
_s\
huffle_\
e\
pi32
(
(
const
__m\
128\
i\

&
)
lO\
OOl\
O\
lOO\
ll\

,
_MM\
_\
SHUFFLE
(
1
,
1
,
1
,
1
)
)
;
lOOOlOlO\
OO\
l
=
(
__\
m1\
2\
8
&
)
_mm\
_sh\
uffle\
_ep\
i32
(
(
const
__\
m1\
2\
8i
&
)
lOOO\
lOlOOll
,
_M\
M_SH\
UFFLE
(
2
,
2
,
2
,
2
)
)
;
lOOOl\
OlOOl\
O
=
_m\
m_mu\
l_ps
(
lO\
OOlOOll\
l\
l\

,
lOO\
O\
lOl\
OlOO
)
;
lOOO\
l\
Ol\
OOOO
=
_mm_\
mul\
_p\
s\

(
lOOOlOlOO\
OO
,
lO\
OO\
lOl\
Ol\
O\
l
)
;
lOOOl\
Ol\
OO\
Ol
=
_m\
m_mul_\
p\
s
(
lOOOl\
O\
lOOO\
l
,
lOOOlOlO\
ll\
O
)
;
lOOOl\
OlOOl\
O
=
_mm_ad\
d_ps\

(
lO\
O\
OlOlO\
OlO
,
lO\
O\
OlOlOOO\
O
)
;
lOOOlOl\
O\
OlO
=
_mm\
_\
a\
dd\
_\
ps
(
lOOOlO\
lOOlO
,
lOOOlOlO\
OO\
l
)
;
*
(
__m128
*
)
lO\
OO\
lOO\
llOO
=
lOOOlO\
lOOlO
;
}
lO\
l\
Ol\
lll\
lOlO
vo\
id
lOlOO\
Ol\
lO\
OO
(
Vec3
*
lOlOlOOlll
lOO\
O\
l\
OOl\
l\
OO\

,
const
Vec\
3
*
lOl\
OlOOlll
lOO\
OlOO\
ll\
Ol
,
const
Vec3
*
lOlO\
lOOl\
ll
lOllOO\
OlOlOl
)
{
lllOOl\
OOOl
(
(
vo\
id
*
)
lO\
OOlOO\
l\
lOO\

!=
(
vo\
id
*
)
lOO\
OlO\
OllOl\

)
;
ll\
l\
O\
OlOO\
Ol\

(
(
void
*
)
lO\
OOlO\
Ol\
lOO
!=
(
vo\
id
*
)
lOllOOO\
l\
O\
l\
Ol
)
;
lllOOlOOOl\

(
(
void
*
)
lOO\
OlO\
O\
l\
lOl\

!=
(
voi\
d
*
)
lOllO\
O\
OlOlO\
l\

)
;
*
(
__\
m128
*
)
lOOOlOO\
l\
l\
OO
=
_mm_sub_\
ps
(
*
(
__m12\
8\

*
)
lOOOlOOl\
l\
Ol
,
*
(
__m128
*
)
lOll\
OOOlO\
l\
Ol
)
;
}
lOlO\
lllll\
Ol\
O
void\

lOlOlO\
OOOl
(
Ve\
c\
3\

*
lOlOlO\
Oll\
l
lO\
OO\
lOOllO\
O
,
co\
ns\
t
Ve\
c3
*
lO\
lO\
l\
OOlll
lO\
OO\
lOO\
llOl
,
cons\
t
Ve\
c\
3
*
lOlO\
lOO\
lll\

lOllOOO\
lO\
lO\
l
)
{
lllOO\
l\
OO\
Ol\

(
(
vo\
id
*
)
lOOOlOOl\
lO\
O
!=
(
voi\
d
*
)
lOOOlOO\
llOl
)
;
lll\
OOlOO\
Ol
(
(
void
*
)
lOOO\
l\
OOllO\
O
!=
(
voi\
d\

*
)
lO\
llO\
O\
OlOlOl\

)
;
ll\
lOO\
lOOOl
(
(
void\

*
)
lOOOlOOllOl\

!=
(
void
*
)
lOllOOOlOl\
Ol
)
;
*
(
__m1\
2\
8
*
)
lOOOl\
O\
O\
l\
l\
OO
=
_mm_add_p\
s
(
*
(
__m1\
28
*
)
lOO\
OlOOll\
Ol
,
*
(
__m1\
2\
8
*
)
lOl\
lOOOl\
Ol\
O\
l
)
;
}
lOlOll\
ll\
lOlO
void
Cross\

(
Vec\
3
*
lOlO\
lOOl\
ll
lOOOlO\
Ol\
lOO
,
co\
nst
Vec3
*
lO\
l\
OlOOl\
ll
lOOOlOOllO\
l
,
con\
s\
t
Vec3
*
lO\
lO\
lOO\
l\
ll
lO\
ll\
OOOlOlOl
)
{
__m128
lOlOOlO\
lll\
O
=
*
(
__m\
12\
8
*
)
lO\
O\
OlOOllOl
;
__m128
lO\
lOOl\
Ol\
lll\

=
*
(
__m1\
28
*
)
lO\
l\
l\
OOOlOlOl
;
__m12\
8\

lOl\
OOl\
l\
Oll\
l
=
(
__m\
128
&
)
_mm_\
sh\
uffle\
_e\
pi\
32
(
(
__m128i
&
)
lOlOOlOl\
llO
,
_M\
M_SHUFF\
LE
(
3
,
0
,
2
,
1
)
)
;
__m\
128
lOl\
OO\
lll\
OOO
=
(
__m128
&
)
_mm\
_s\
huff\
le\
_epi3\
2\

(
(
__m128i
&
)
lO\
lOO\
lOllll\

,
_MM_\
SHUFFLE
(
3
,
1
,
0
,
2
)
)
;
lOlOOlllOOO
=
_mm\
_mul_ps
(
lOlOOlllOOO\

,
lOlOOllOlll\

)
;
__m1\
28
lOlOOll\
lOOl\

=
(
__m\
128
&
)
_mm_sh\
uffle_\
e\
pi32
(
(
__m1\
28i
&
)
lOlOOllOll\
l\

,
_MM_SH\
UFFLE
(
3
,
0
,
2
,
1
)
)
;
__m12\
8\

lOlOOl\
l\
lOlO
=
(
__m128
&
)
_mm_s\
huff\
le_e\
pi32\

(
(
__\
m128i
&
)
lOlOO\
lO\
llll
,
_M\
M_S\
HU\
F\
FLE
(
3
,
0
,
2
,
1
)
)
;
lO\
l\
OOlllOOl
=
_mm_\
m\
ul_ps
(
lO\
l\
OO\
ll\
lOOl
,
lOl\
O\
OlllOlO
)
;
lOlOOlllOOO
=
_mm_sub_ps
(
lOlOOl\
llOOO\

,
lOlOO\
lllOOl
)
;
*
(
__\
m128
*
)
lOO\
Ol\
OO\
llO\
O
=
lO\
lO\
Olll\
OOO
;
}
lOlOllll\
lO\
l\
O
flo\
at\

Dot\

(
const
Ve\
c3
*
lO\
lOlOOlll
lOOOlOOl\
l\
Ol
,
const
Vec3
*
lOlOl\
OOl\
ll
lOll\
OOOlOlOl
)
{
__m1\
28
lllOO\
l\
l\
lO\
O
=
*
(
__m128
*
)
lOO\
O\
lOOllOl
;
__m12\
8
lllOlOO\
O\
OO
=
*
(
__m\
128\

*
)
lOllO\
OOlOlO\
l
;
__m128\

lOlOOlOl\
l\
l\
O\

=
_mm_mul_ps
(
lllO\
Ol\
l\
lOO\

,
lllOlO\
O\
OO\
O
)
;
__\
m1\
28
lOl\
OOlOlll\
l
=
(
__m128
&
)
_mm_shuff\
le_\
epi3\
2\

(
(
__m\
128i
&
)
lO\
lOOlO\
lllO\

,
_MM_SHUFFLE
(
3
,
0
,
2
,
1
)
)
;
lOlOOlOl\
lll
=
_mm_add_s\
s
(
lO\
lOOlOlll\
l\

,
lO\
lOO\
lOlll\
O
)
;
lOl\
O\
OlOll\
l\
O
=
(
__\
m128
&
)
_m\
m_shuffl\
e_epi32\

(
(
__\
m1\
2\
8i\

&
)
lOlOOlOl\
llO
,
_M\
M_SH\
UFFLE
(
3
,
1
,
0
,
2
)
)
;
lOlOOl\
O\
lllO
=
_mm\
_\
add_ss
(
lO\
l\
O\
OlOll\
l\
O
,
lO\
lOOlO\
ll\
ll
)
;
retu\
rn
(
(
Vec3
&
)
lO\
lO\
OlOlllO
)
.
x
;
}
lOlOlll\
llOlO\

float
lOOlOlll\
OlOO
(
Ve\
c\
3
*
lOl\
O\
lOO\
lll
lOl\
OllllllO\
O
,
con\
st\

Vec\
3\

*
lO\
lOlOOlll\

lOl\
Olllll\
lO\
l
,
co\
ns\
t\

Ve\
c\
3
*
lOlO\
lOOl\
ll\

lOl\
OlllllllO
,
const\

Vec3\

*
lO\
lO\
l\
O\
Olll
lO\
lOllllllll
,
const\

Mat33
*
lOlO\
l\
OO\
ll\
l\

lO\
llO\
OOO\
OO\
O\
O
,
const
flo\
at\

lOl\
lOOOOOOO\
l
)
{
Vec3
lOl\
lOOOl\
O\
l\
lO
;
lOlO\
OOll\
OO\
O
(
&
lOllOO\
O\
lOllO
,
lOlO\
llllll\
lO\

,
lO\
lOllll\
ll\
O\
l
)
;
Vec3
lOllO\
OO\
lOlll
;
Cross
(
&
lOllOO\
OlOlll
,
lOlOll\
llllll
,
&
lO\
llOO\
OlOll\
O
)
;
Vec\
3
lOll\
OO\
OllO\
O\
O\

;
lOllO\
OOlO\
lOO
(
&
lOllOOOllOOO
,
&
lOllOOOl\
Olll
,
lOll\
OO\
OO\
OO\
OO
)
;
*
(
__m\
12\
8
*
)
lOlO\
llll\
llOO
=
*
(
__m\
1\
28
*
)
&
lOllOOOllOO\
O
;
Ve\
c3
lO\
l\
lOOO\
llOOl
;
Cr\
oss
(
&
lOl\
lOOO\
l\
l\
OOl
,
&
lO\
l\
lOO\
OlOllO
,
&
lO\
llOOO\
llOOO\

)
;
floa\
t
lOlOllll\
l\
ll
=
Dot
(
lOl\
Oll\
llllll
,
&
lOll\
OOO\
llOOl
)
;
lO\
lO\
llll\
l\
l\
l
*=
lOOlOlll\
lllO\

;
lOl\
Oll\
llll\
l\

+=
lOl\
l\
OOO\
O\
OOOl
;
re\
tur\
n
lOlO\
l\
llllll
;
}
lO\
lO\
llll\
lO\
lO\

void
lO\
OlO\
l\
l\
llO\
l\
O
(
Vec3
*
lO\
lOlOO\
lll
lO\
OOlOOllOO\

,
const
Vec3\

*
lOlO\
lOOlll\

lO\
llOOOOOOlO
,
float\

lOll\
OOO\
O\
OO\
ll\

)
{
__m\
12\
8
lOl\
l\
OOO\
llOlO
;
__m\
1\
28\

lOll\
OOO\
llOll
;
lO\
llO\
OOl\
l\
Ol\
l
=
_mm_se\
t1_ps
(
lOll\
O\
OOOO\
O\
l\
l
)
;
lOllOOO\
ll\
O\
lO
=
_mm_m\
ul_ps\

(
*
(
__\
m128\

*
)
lOllOOOOO\
O\
l\
O
,
lOl\
l\
O\
O\
Ol\
lOll
)
;
*
(
__\
m1\
28
*
)
lOO\
OlO\
OllOO\

=
_mm\
_a\
dd_ps\

(
*
(
__m128
*
)
lO\
O\
OlO\
Oll\
OO
,
lOllOOOl\
lOlO
)
;
}
lO\
l\
Oll\
ll\
lO\
lO
vo\
id
lO\
Ol\
l\
OOOO\
llO
(
Vec3\

*
lOlOlOOl\
ll\

lO\
l\
lO\
OOOOlOO
,
cons\
t
Vec\
3\

*
lOlO\
l\
OO\
l\
ll
lOllO\
O\
O\
OOlOl
,
cons\
t
Ve\
c3
*
lOlOlOO\
l\
l\
l
lOll\
O\
OOO\
Ol\
l\
O
,
co\
n\
s\
t
Ve\
c\
3
*
lOlOl\
O\
Ol\
ll
lOllOOO\
OOlll
,
con\
s\
t
Vec3
*
lO\
lO\
lOOlll\

lOllO\
OOOl\
OOO
,
const
Vec\
3
*
lO\
lOlO\
Olll
lOll\
OOOOlO\
O\
l\

,
con\
s\
t\

Vec\
3
*
lO\
lOlOOlll
lOllO\
O\
OOlOlO\

,
cons\
t\

Vec3
*
lOlOlOOlll
lO\
l\
l\
O\
OOO\
lO\
ll
)
{
__m\
12\
8
lOl\
lO\
OO\
lll\
OO
;
Vec3
lOO\
l\
lOOOlOlO
;
Vec3
lO\
O\
llOOOlOl\
l\

;
Ve\
c3
lOl\
lO\
OOOlllO\

;
Vec3
lO\
llOO\
OOlll\
l
;
lOlOOOl\
lO\
OO
(
&
lOOllOOOlO\
lO
,
lOllO\
O\
OO\
O\
l\
Ol
,
lO\
l\
lOOO\
O\
lO\
O\
O
)
;
lOlOOOl\
l\
OOO
(
&
lO\
Ol\
lO\
OOlO\
ll
,
lOll\
OO\
O\
OOl\
O\
l
,
lO\
llO\
OOO\
lOll
)
;
Cro\
s\
s
(
&
lOll\
OOOOlllO
,
lO\
llOOOOOl\
ll\

,
&
lOO\
ll\
O\
OOlOlO
)
;
Cros\
s
(
&
lOllO\
OOOllll
,
lO\
llOOOOlO\
l\
O
,
&
lOOl\
lO\
O\
O\
lOll\

)
;
lO\
l\
lOOOll\
lO\
O
=
_m\
m_sub_ps
(
*
(
__\
m\
128
*
)
lOl\
l\
OOOO\
O\
llO
,
*
(
__m\
128
*
)
lOll\
OO\
O\
O\
l\
OOl\

)
;
__\
m\
12\
8
lO\
llOOOlllOl
=
_mm_s\
ub_\
ps
(
*
(
__m128\

*
)
&
lOl\
lOO\
OO\
lllO
,
*
(
__m\
128
*
)
&
lO\
l\
lOOOOll\
ll\

)
;
lOllOOOl\
ll\
OO
=
_mm_ad\
d_p\
s
(
lO\
llOOOlllO\
O\

,
lOl\
lOO\
Oll\
lO\
l
)
;
*
(
__\
m1\
28
*
)
lOllOO\
OOOlO\
O
=
lOllOO\
Oll\
lOO
;
}
#include "../Physics/zpta008.inl"
}
}
#endif //
